#!/usr/bin/env perl
#
# Summary: list all the CPAN installed distributions and their versions
#
# Usage: plenv list-dists
#
# Similar to the builtin 'list-modules' command, but this also shows the
# version of each CPAN installed distribution. 
#
# This command assumes the distributions were installed via cpanm (or similar)
# and that the .meta directory exists and contains the install.json and
# MYMETA.json files.
#
# This will look for all files within @INC.

use strict;
use warnings;

use JSON::PP;
use File::Find;

sub all_installed_dists {
  my %dists;
  File::Find::find(
    sub { 
      return unless /^install.json$/;
      open my $ijh, '<', $_;
      my $json;
      {
        local $/ = undef;
        $json = <$ijh>
      }

      my $ij = JSON::PP->new->decode( $json );

      my $target   = $ij->{ target };
      my $name     = $ij->{ name };
      my $distvers = $ij->{ version };
      my $pathname = $ij->{ pathname };
      my $provides = $ij->{ provides };

      my $distname = exists $provides->{ $name } ? $name : $target;

      if( exists $dists{ $distname } ) {
        my $old = delete $dists{ $distname };
        my $oldvers = version->parse( $old->{ version } );
        my $newvers = version->parse( $distvers );
        if( $oldvers > $newvers ) {
          $dists{ $distname } = $old;
          return;
        }
      }

      $dists{ $distname } = {
        pathname => $pathname,
        version  => $distvers,
        module   => $distname
      };
      return;
    },
    @INC );

  return sort { $a->{ module } cmp $b->{ module } } 
         values %dists;
}

sub list_dists {
  my @dists = all_installed_dists();
 
  my %all;
  foreach my $mod (@dists) {
    $all{ $mod->{ module } } = $mod;
  }

  foreach my $mod (sort keys %all) {
    my $dist = $all{ $mod };
    my $version = version->parse( $dist->{ version } );
    $version = '-' 
      if( ! defined $version || ( ! ref $version && $version eq '' ) );
    printf "%s %s\n", $mod, $version;
  }
}

list_dists();
